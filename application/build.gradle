plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'maven-publish'
    id 'signing'
}

application {
    mainClassName = "application.QontractApplication"
}

jar {
    from '../version.properties'
}

shadowJar {
    archiveFileName = "qontract.${archiveExtension.get()}"
    from '../version.properties'
}

repositories {
    mavenLocal()
    maven {
        url = 'https://jcenter.bintray.com'
    }

    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

def ktor_version = "1.4.0"
def junit_version = "5.6.2"
def jgit_version = "5.8.1.202007141445-r"

dependencies {
    implementation 'info.picocli:picocli:4.5.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation "io.ktor:ktor-client-core-jvm:${ktor_version}"
    implementation "io.ktor:ktor-network-tls:$ktor_version"
    implementation "io.ktor:ktor-network-tls-certificates:$ktor_version"

    implementation 'org.junit.platform:junit-platform-launcher:1.6.2'
    implementation 'org.junit.platform:junit-platform-reporting:1.6.2'

    implementation "org.eclipse.jgit:org.eclipse.jgit:$jgit_version"
    implementation "org.eclipse.jgit:org.eclipse.jgit.ssh.apache:$jgit_version"

    implementation 'org.slf4j:slf4j-nop:1.7.30'
    implementation 'org.apache.kafka:kafka-clients:2.6.0'

    implementation 'org.apache.ant:ant-junit:1.10.8'

    implementation(project(':core'))
    implementation(project(':junit5-support'))

    implementation "io.ktor:ktor-client-cio:$ktor_version"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"

    testImplementation 'io.mockk:mockk:1.10.0'
    testImplementation 'org.assertj:assertj-core:3.16.1'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
}

test {
    useJUnitPlatform()
}

group = 'run.qontract'

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
